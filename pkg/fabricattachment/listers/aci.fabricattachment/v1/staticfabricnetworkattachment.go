/***
Copyright 2021 Cisco Systems Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/noironetworks/aci-containers/pkg/fabricattachment/apis/aci.fabricattachment/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StaticFabricNetworkAttachmentLister helps list StaticFabricNetworkAttachments.
// All objects returned here must be treated as read-only.
type StaticFabricNetworkAttachmentLister interface {
	// List lists all StaticFabricNetworkAttachments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.StaticFabricNetworkAttachment, err error)
	// StaticFabricNetworkAttachments returns an object that can list and get StaticFabricNetworkAttachments.
	StaticFabricNetworkAttachments(namespace string) StaticFabricNetworkAttachmentNamespaceLister
	StaticFabricNetworkAttachmentListerExpansion
}

// staticFabricNetworkAttachmentLister implements the StaticFabricNetworkAttachmentLister interface.
type staticFabricNetworkAttachmentLister struct {
	indexer cache.Indexer
}

// NewStaticFabricNetworkAttachmentLister returns a new StaticFabricNetworkAttachmentLister.
func NewStaticFabricNetworkAttachmentLister(indexer cache.Indexer) StaticFabricNetworkAttachmentLister {
	return &staticFabricNetworkAttachmentLister{indexer: indexer}
}

// List lists all StaticFabricNetworkAttachments in the indexer.
func (s *staticFabricNetworkAttachmentLister) List(selector labels.Selector) (ret []*v1.StaticFabricNetworkAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.StaticFabricNetworkAttachment))
	})
	return ret, err
}

// StaticFabricNetworkAttachments returns an object that can list and get StaticFabricNetworkAttachments.
func (s *staticFabricNetworkAttachmentLister) StaticFabricNetworkAttachments(namespace string) StaticFabricNetworkAttachmentNamespaceLister {
	return staticFabricNetworkAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StaticFabricNetworkAttachmentNamespaceLister helps list and get StaticFabricNetworkAttachments.
// All objects returned here must be treated as read-only.
type StaticFabricNetworkAttachmentNamespaceLister interface {
	// List lists all StaticFabricNetworkAttachments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.StaticFabricNetworkAttachment, err error)
	// Get retrieves the StaticFabricNetworkAttachment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.StaticFabricNetworkAttachment, error)
	StaticFabricNetworkAttachmentNamespaceListerExpansion
}

// staticFabricNetworkAttachmentNamespaceLister implements the StaticFabricNetworkAttachmentNamespaceLister
// interface.
type staticFabricNetworkAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StaticFabricNetworkAttachments in the indexer for a given namespace.
func (s staticFabricNetworkAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1.StaticFabricNetworkAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.StaticFabricNetworkAttachment))
	})
	return ret, err
}

// Get retrieves the StaticFabricNetworkAttachment from the indexer for a given namespace and name.
func (s staticFabricNetworkAttachmentNamespaceLister) Get(name string) (*v1.StaticFabricNetworkAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("staticfabricnetworkattachment"), name)
	}
	return obj.(*v1.StaticFabricNetworkAttachment), nil
}
