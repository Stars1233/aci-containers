/***
Copyright 2021 Cisco Systems Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// VlanSpecApplyConfiguration represents an declarative configuration of the VlanSpec type for use
// with apply.
type VlanSpecApplyConfiguration struct {
	Label *string `json:"label,omitempty"`
	Vlans *string `json:"vlans,omitempty"`
}

// VlanSpecApplyConfiguration constructs an declarative configuration of the VlanSpec type for use with
// apply.
func VlanSpec() *VlanSpecApplyConfiguration {
	return &VlanSpecApplyConfiguration{}
}

// WithLabel sets the Label field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Label field is set to the value of the last call.
func (b *VlanSpecApplyConfiguration) WithLabel(value string) *VlanSpecApplyConfiguration {
	b.Label = &value
	return b
}

// WithVlans sets the Vlans field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Vlans field is set to the value of the last call.
func (b *VlanSpecApplyConfiguration) WithVlans(value string) *VlanSpecApplyConfiguration {
	b.Vlans = &value
	return b
}
