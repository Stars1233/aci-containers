/***
Copyright 2021 Cisco Systems Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// BGPPeerPolicyApplyConfiguration represents an declarative configuration of the BGPPeerPolicy type for use
// with apply.
type BGPPeerPolicyApplyConfiguration struct {
	Enabled        *bool                     `json:"enabled,omitempty"`
	Prefix         *string                   `json:"prefix,omitempty"`
	Ctrl           *string                   `json:"ctrl,omitempty"`
	PeerASN        *int                      `json:"peerASN,omitempty"`
	PeerCtl        *string                   `json:"peerCtl,omitempty"`
	LocalASN       *int                      `json:"localASN,omitempty"`
	LocalASNConfig *string                   `json:"localASNConfig,omitempty"`
	Secret         *ObjRefApplyConfiguration `json:"secret,omitempty"`
	PrefixPolicy   *string                   `json:"prefixPolicy,omitempty"`
}

// BGPPeerPolicyApplyConfiguration constructs an declarative configuration of the BGPPeerPolicy type for use with
// apply.
func BGPPeerPolicy() *BGPPeerPolicyApplyConfiguration {
	return &BGPPeerPolicyApplyConfiguration{}
}

// WithEnabled sets the Enabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enabled field is set to the value of the last call.
func (b *BGPPeerPolicyApplyConfiguration) WithEnabled(value bool) *BGPPeerPolicyApplyConfiguration {
	b.Enabled = &value
	return b
}

// WithPrefix sets the Prefix field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Prefix field is set to the value of the last call.
func (b *BGPPeerPolicyApplyConfiguration) WithPrefix(value string) *BGPPeerPolicyApplyConfiguration {
	b.Prefix = &value
	return b
}

// WithCtrl sets the Ctrl field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Ctrl field is set to the value of the last call.
func (b *BGPPeerPolicyApplyConfiguration) WithCtrl(value string) *BGPPeerPolicyApplyConfiguration {
	b.Ctrl = &value
	return b
}

// WithPeerASN sets the PeerASN field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PeerASN field is set to the value of the last call.
func (b *BGPPeerPolicyApplyConfiguration) WithPeerASN(value int) *BGPPeerPolicyApplyConfiguration {
	b.PeerASN = &value
	return b
}

// WithPeerCtl sets the PeerCtl field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PeerCtl field is set to the value of the last call.
func (b *BGPPeerPolicyApplyConfiguration) WithPeerCtl(value string) *BGPPeerPolicyApplyConfiguration {
	b.PeerCtl = &value
	return b
}

// WithLocalASN sets the LocalASN field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LocalASN field is set to the value of the last call.
func (b *BGPPeerPolicyApplyConfiguration) WithLocalASN(value int) *BGPPeerPolicyApplyConfiguration {
	b.LocalASN = &value
	return b
}

// WithLocalASNConfig sets the LocalASNConfig field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LocalASNConfig field is set to the value of the last call.
func (b *BGPPeerPolicyApplyConfiguration) WithLocalASNConfig(value string) *BGPPeerPolicyApplyConfiguration {
	b.LocalASNConfig = &value
	return b
}

// WithSecret sets the Secret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Secret field is set to the value of the last call.
func (b *BGPPeerPolicyApplyConfiguration) WithSecret(value *ObjRefApplyConfiguration) *BGPPeerPolicyApplyConfiguration {
	b.Secret = value
	return b
}

// WithPrefixPolicy sets the PrefixPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PrefixPolicy field is set to the value of the last call.
func (b *BGPPeerPolicyApplyConfiguration) WithPrefixPolicy(value string) *BGPPeerPolicyApplyConfiguration {
	b.PrefixPolicy = &value
	return b
}
