/***
Copyright 2021 Cisco Systems Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// NodeFabricL3PeerApplyConfiguration represents an declarative configuration of the NodeFabricL3Peer type for use
// with apply.
type NodeFabricL3PeerApplyConfiguration struct {
	NodeName      *string                           `json:"nodeName,omitempty"`
	FabricL3Peers []FabricL3PeersApplyConfiguration `json:"fabricL3Peers,omitempty"`
}

// NodeFabricL3PeerApplyConfiguration constructs an declarative configuration of the NodeFabricL3Peer type for use with
// apply.
func NodeFabricL3Peer() *NodeFabricL3PeerApplyConfiguration {
	return &NodeFabricL3PeerApplyConfiguration{}
}

// WithNodeName sets the NodeName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NodeName field is set to the value of the last call.
func (b *NodeFabricL3PeerApplyConfiguration) WithNodeName(value string) *NodeFabricL3PeerApplyConfiguration {
	b.NodeName = &value
	return b
}

// WithFabricL3Peers adds the given value to the FabricL3Peers field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the FabricL3Peers field.
func (b *NodeFabricL3PeerApplyConfiguration) WithFabricL3Peers(values ...*FabricL3PeersApplyConfiguration) *NodeFabricL3PeerApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithFabricL3Peers")
		}
		b.FabricL3Peers = append(b.FabricL3Peers, *values[i])
	}
	return b
}
