// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gbp.proto

package gbpserver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GBPOperation_OpCode int32

const (
	GBPOperation_ADD              GBPOperation_OpCode = 0
	GBPOperation_REPLACE          GBPOperation_OpCode = 1
	GBPOperation_DELETE           GBPOperation_OpCode = 2
	GBPOperation_DELETE_RECURSIVE GBPOperation_OpCode = 3
)

var GBPOperation_OpCode_name = map[int32]string{
	0: "ADD",
	1: "REPLACE",
	2: "DELETE",
	3: "DELETE_RECURSIVE",
}
var GBPOperation_OpCode_value = map[string]int32{
	"ADD":              0,
	"REPLACE":          1,
	"DELETE":           2,
	"DELETE_RECURSIVE": 3,
}

func (x GBPOperation_OpCode) String() string {
	return proto.EnumName(GBPOperation_OpCode_name, int32(x))
}
func (GBPOperation_OpCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_gbp_618b6ac99253a190, []int{0, 0}
}

// A GBPOperation adds, replaces or deletes a subtree
type GBPOperation struct {
	Opcode               GBPOperation_OpCode `protobuf:"varint,1,opt,name=opcode,enum=gbpserver.GBPOperation_OpCode" json:"opcode,omitempty"`
	ObjectList           []*GBPObject        `protobuf:"bytes,2,rep,name=object_list,json=objectList" json:"object_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GBPOperation) Reset()         { *m = GBPOperation{} }
func (m *GBPOperation) String() string { return proto.CompactTextString(m) }
func (*GBPOperation) ProtoMessage()    {}
func (*GBPOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_gbp_618b6ac99253a190, []int{0}
}
func (m *GBPOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GBPOperation.Unmarshal(m, b)
}
func (m *GBPOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GBPOperation.Marshal(b, m, deterministic)
}
func (dst *GBPOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GBPOperation.Merge(dst, src)
}
func (m *GBPOperation) XXX_Size() int {
	return xxx_messageInfo_GBPOperation.Size(m)
}
func (m *GBPOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_GBPOperation.DiscardUnknown(m)
}

var xxx_messageInfo_GBPOperation proto.InternalMessageInfo

func (m *GBPOperation) GetOpcode() GBPOperation_OpCode {
	if m != nil {
		return m.Opcode
	}
	return GBPOperation_ADD
}

func (m *GBPOperation) GetObjectList() []*GBPObject {
	if m != nil {
		return m.ObjectList
	}
	return nil
}

// Version is used for syncing between client and server
type Version struct {
	Number               int32    `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_gbp_618b6ac99253a190, []int{1}
}
func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (dst *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(dst, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

// GBPObject is a generic definition representing an object
type GBPObject struct {
	Subject              string      `protobuf:"bytes,1,opt,name=subject" json:"subject,omitempty"`
	Uri                  string      `protobuf:"bytes,2,opt,name=uri" json:"uri,omitempty"`
	Properties           []*Property `protobuf:"bytes,3,rep,name=properties" json:"properties,omitempty"`
	Children             []string    `protobuf:"bytes,4,rep,name=children" json:"children,omitempty"`
	ParentSubject        string      `protobuf:"bytes,5,opt,name=parent_subject,json=parentSubject" json:"parent_subject,omitempty"`
	ParentUri            string      `protobuf:"bytes,6,opt,name=parent_uri,json=parentUri" json:"parent_uri,omitempty"`
	ParentRelation       string      `protobuf:"bytes,7,opt,name=parent_relation,json=parentRelation" json:"parent_relation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GBPObject) Reset()         { *m = GBPObject{} }
func (m *GBPObject) String() string { return proto.CompactTextString(m) }
func (*GBPObject) ProtoMessage()    {}
func (*GBPObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_gbp_618b6ac99253a190, []int{2}
}
func (m *GBPObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GBPObject.Unmarshal(m, b)
}
func (m *GBPObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GBPObject.Marshal(b, m, deterministic)
}
func (dst *GBPObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GBPObject.Merge(dst, src)
}
func (m *GBPObject) XXX_Size() int {
	return xxx_messageInfo_GBPObject.Size(m)
}
func (m *GBPObject) XXX_DiscardUnknown() {
	xxx_messageInfo_GBPObject.DiscardUnknown(m)
}

var xxx_messageInfo_GBPObject proto.InternalMessageInfo

func (m *GBPObject) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *GBPObject) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *GBPObject) GetProperties() []*Property {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *GBPObject) GetChildren() []string {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *GBPObject) GetParentSubject() string {
	if m != nil {
		return m.ParentSubject
	}
	return ""
}

func (m *GBPObject) GetParentUri() string {
	if m != nil {
		return m.ParentUri
	}
	return ""
}

func (m *GBPObject) GetParentRelation() string {
	if m != nil {
		return m.ParentRelation
	}
	return ""
}

// Property is a name value pair, where the value could be one of [string, int, Reference]
type Property struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*Property_StrVal
	//	*Property_IntVal
	//	*Property_RefVal
	Value                isProperty_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Property) Reset()         { *m = Property{} }
func (m *Property) String() string { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()    {}
func (*Property) Descriptor() ([]byte, []int) {
	return fileDescriptor_gbp_618b6ac99253a190, []int{3}
}
func (m *Property) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Property.Unmarshal(m, b)
}
func (m *Property) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Property.Marshal(b, m, deterministic)
}
func (dst *Property) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Property.Merge(dst, src)
}
func (m *Property) XXX_Size() int {
	return xxx_messageInfo_Property.Size(m)
}
func (m *Property) XXX_DiscardUnknown() {
	xxx_messageInfo_Property.DiscardUnknown(m)
}

var xxx_messageInfo_Property proto.InternalMessageInfo

type isProperty_Value interface {
	isProperty_Value()
}

type Property_StrVal struct {
	StrVal string `protobuf:"bytes,2,opt,name=strVal,oneof"`
}
type Property_IntVal struct {
	IntVal int32 `protobuf:"varint,3,opt,name=intVal,oneof"`
}
type Property_RefVal struct {
	RefVal *Reference `protobuf:"bytes,4,opt,name=refVal,oneof"`
}

func (*Property_StrVal) isProperty_Value() {}
func (*Property_IntVal) isProperty_Value() {}
func (*Property_RefVal) isProperty_Value() {}

func (m *Property) GetValue() isProperty_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Property) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Property) GetStrVal() string {
	if x, ok := m.GetValue().(*Property_StrVal); ok {
		return x.StrVal
	}
	return ""
}

func (m *Property) GetIntVal() int32 {
	if x, ok := m.GetValue().(*Property_IntVal); ok {
		return x.IntVal
	}
	return 0
}

func (m *Property) GetRefVal() *Reference {
	if x, ok := m.GetValue().(*Property_RefVal); ok {
		return x.RefVal
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Property) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Property_OneofMarshaler, _Property_OneofUnmarshaler, _Property_OneofSizer, []interface{}{
		(*Property_StrVal)(nil),
		(*Property_IntVal)(nil),
		(*Property_RefVal)(nil),
	}
}

func _Property_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Property)
	// value
	switch x := m.Value.(type) {
	case *Property_StrVal:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.StrVal)
	case *Property_IntVal:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IntVal))
	case *Property_RefVal:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RefVal); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Property.Value has unexpected type %T", x)
	}
	return nil
}

func _Property_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Property)
	switch tag {
	case 2: // value.strVal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &Property_StrVal{x}
		return true, err
	case 3: // value.intVal
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &Property_IntVal{int32(x)}
		return true, err
	case 4: // value.refVal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reference)
		err := b.DecodeMessage(msg)
		m.Value = &Property_RefVal{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Property_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Property)
	// value
	switch x := m.Value.(type) {
	case *Property_StrVal:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.StrVal)))
		n += len(x.StrVal)
	case *Property_IntVal:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.IntVal))
	case *Property_RefVal:
		s := proto.Size(x.RefVal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Reference refers to another GBP object
type Reference struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject" json:"subject,omitempty"`
	ReferenceUri         string   `protobuf:"bytes,2,opt,name=reference_uri,json=referenceUri" json:"reference_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reference) Reset()         { *m = Reference{} }
func (m *Reference) String() string { return proto.CompactTextString(m) }
func (*Reference) ProtoMessage()    {}
func (*Reference) Descriptor() ([]byte, []int) {
	return fileDescriptor_gbp_618b6ac99253a190, []int{4}
}
func (m *Reference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reference.Unmarshal(m, b)
}
func (m *Reference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reference.Marshal(b, m, deterministic)
}
func (dst *Reference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reference.Merge(dst, src)
}
func (m *Reference) XXX_Size() int {
	return xxx_messageInfo_Reference.Size(m)
}
func (m *Reference) XXX_DiscardUnknown() {
	xxx_messageInfo_Reference.DiscardUnknown(m)
}

var xxx_messageInfo_Reference proto.InternalMessageInfo

func (m *Reference) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Reference) GetReferenceUri() string {
	if m != nil {
		return m.ReferenceUri
	}
	return ""
}

// VTEP is the ip address of the vtep matching a node.
type VTEP struct {
	Vtep                 string   `protobuf:"bytes,1,opt,name=vtep" json:"vtep,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VTEP) Reset()         { *m = VTEP{} }
func (m *VTEP) String() string { return proto.CompactTextString(m) }
func (*VTEP) ProtoMessage()    {}
func (*VTEP) Descriptor() ([]byte, []int) {
	return fileDescriptor_gbp_618b6ac99253a190, []int{5}
}
func (m *VTEP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VTEP.Unmarshal(m, b)
}
func (m *VTEP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VTEP.Marshal(b, m, deterministic)
}
func (dst *VTEP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VTEP.Merge(dst, src)
}
func (m *VTEP) XXX_Size() int {
	return xxx_messageInfo_VTEP.Size(m)
}
func (m *VTEP) XXX_DiscardUnknown() {
	xxx_messageInfo_VTEP.DiscardUnknown(m)
}

var xxx_messageInfo_VTEP proto.InternalMessageInfo

func (m *VTEP) GetVtep() string {
	if m != nil {
		return m.Vtep
	}
	return ""
}

// VTEPList is the list of vteps, corresponding to the connected grpc clients
type VTEPList struct {
	Vteps                []string `protobuf:"bytes,1,rep,name=vteps" json:"vteps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VTEPList) Reset()         { *m = VTEPList{} }
func (m *VTEPList) String() string { return proto.CompactTextString(m) }
func (*VTEPList) ProtoMessage()    {}
func (*VTEPList) Descriptor() ([]byte, []int) {
	return fileDescriptor_gbp_618b6ac99253a190, []int{6}
}
func (m *VTEPList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VTEPList.Unmarshal(m, b)
}
func (m *VTEPList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VTEPList.Marshal(b, m, deterministic)
}
func (dst *VTEPList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VTEPList.Merge(dst, src)
}
func (m *VTEPList) XXX_Size() int {
	return xxx_messageInfo_VTEPList.Size(m)
}
func (m *VTEPList) XXX_DiscardUnknown() {
	xxx_messageInfo_VTEPList.DiscardUnknown(m)
}

var xxx_messageInfo_VTEPList proto.InternalMessageInfo

func (m *VTEPList) GetVteps() []string {
	if m != nil {
		return m.Vteps
	}
	return nil
}

// ObjectList is a list of GBP objects
type ObjectList struct {
	MoList               []*GBPObject `protobuf:"bytes,1,rep,name=mo_list,json=moList" json:"mo_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ObjectList) Reset()         { *m = ObjectList{} }
func (m *ObjectList) String() string { return proto.CompactTextString(m) }
func (*ObjectList) ProtoMessage()    {}
func (*ObjectList) Descriptor() ([]byte, []int) {
	return fileDescriptor_gbp_618b6ac99253a190, []int{7}
}
func (m *ObjectList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectList.Unmarshal(m, b)
}
func (m *ObjectList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectList.Marshal(b, m, deterministic)
}
func (dst *ObjectList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectList.Merge(dst, src)
}
func (m *ObjectList) XXX_Size() int {
	return xxx_messageInfo_ObjectList.Size(m)
}
func (m *ObjectList) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectList.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectList proto.InternalMessageInfo

func (m *ObjectList) GetMoList() []*GBPObject {
	if m != nil {
		return m.MoList
	}
	return nil
}

type EmptyMsg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMsg) Reset()         { *m = EmptyMsg{} }
func (m *EmptyMsg) String() string { return proto.CompactTextString(m) }
func (*EmptyMsg) ProtoMessage()    {}
func (*EmptyMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_gbp_618b6ac99253a190, []int{8}
}
func (m *EmptyMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMsg.Unmarshal(m, b)
}
func (m *EmptyMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMsg.Marshal(b, m, deterministic)
}
func (dst *EmptyMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMsg.Merge(dst, src)
}
func (m *EmptyMsg) XXX_Size() int {
	return xxx_messageInfo_EmptyMsg.Size(m)
}
func (m *EmptyMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMsg.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMsg proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GBPOperation)(nil), "gbpserver.GBPOperation")
	proto.RegisterType((*Version)(nil), "gbpserver.Version")
	proto.RegisterType((*GBPObject)(nil), "gbpserver.GBPObject")
	proto.RegisterType((*Property)(nil), "gbpserver.Property")
	proto.RegisterType((*Reference)(nil), "gbpserver.Reference")
	proto.RegisterType((*VTEP)(nil), "gbpserver.VTEP")
	proto.RegisterType((*VTEPList)(nil), "gbpserver.VTEPList")
	proto.RegisterType((*ObjectList)(nil), "gbpserver.ObjectList")
	proto.RegisterType((*EmptyMsg)(nil), "gbpserver.EmptyMsg")
	proto.RegisterEnum("gbpserver.GBPOperation_OpCode", GBPOperation_OpCode_name, GBPOperation_OpCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GBP service

type GBPClient interface {
	// Obtains the objects currently in the policy database as a stream
	ListObjects(ctx context.Context, in *Version, opts ...grpc.CallOption) (GBP_ListObjectsClient, error)
	ListVTEPs(ctx context.Context, in *EmptyMsg, opts ...grpc.CallOption) (*VTEPList, error)
	GetSnapShot(ctx context.Context, in *VTEP, opts ...grpc.CallOption) (*ObjectList, error)
}

type gBPClient struct {
	cc *grpc.ClientConn
}

func NewGBPClient(cc *grpc.ClientConn) GBPClient {
	return &gBPClient{cc}
}

func (c *gBPClient) ListObjects(ctx context.Context, in *Version, opts ...grpc.CallOption) (GBP_ListObjectsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_GBP_serviceDesc.Streams[0], c.cc, "/gbpserver.GBP/ListObjects", opts...)
	if err != nil {
		return nil, err
	}
	x := &gBPListObjectsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GBP_ListObjectsClient interface {
	Recv() (*GBPOperation, error)
	grpc.ClientStream
}

type gBPListObjectsClient struct {
	grpc.ClientStream
}

func (x *gBPListObjectsClient) Recv() (*GBPOperation, error) {
	m := new(GBPOperation)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gBPClient) ListVTEPs(ctx context.Context, in *EmptyMsg, opts ...grpc.CallOption) (*VTEPList, error) {
	out := new(VTEPList)
	err := grpc.Invoke(ctx, "/gbpserver.GBP/ListVTEPs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gBPClient) GetSnapShot(ctx context.Context, in *VTEP, opts ...grpc.CallOption) (*ObjectList, error) {
	out := new(ObjectList)
	err := grpc.Invoke(ctx, "/gbpserver.GBP/GetSnapShot", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GBP service

type GBPServer interface {
	// Obtains the objects currently in the policy database as a stream
	ListObjects(*Version, GBP_ListObjectsServer) error
	ListVTEPs(context.Context, *EmptyMsg) (*VTEPList, error)
	GetSnapShot(context.Context, *VTEP) (*ObjectList, error)
}

func RegisterGBPServer(s *grpc.Server, srv GBPServer) {
	s.RegisterService(&_GBP_serviceDesc, srv)
}

func _GBP_ListObjects_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Version)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GBPServer).ListObjects(m, &gBPListObjectsServer{stream})
}

type GBP_ListObjectsServer interface {
	Send(*GBPOperation) error
	grpc.ServerStream
}

type gBPListObjectsServer struct {
	grpc.ServerStream
}

func (x *gBPListObjectsServer) Send(m *GBPOperation) error {
	return x.ServerStream.SendMsg(m)
}

func _GBP_ListVTEPs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GBPServer).ListVTEPs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gbpserver.GBP/ListVTEPs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GBPServer).ListVTEPs(ctx, req.(*EmptyMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _GBP_GetSnapShot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VTEP)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GBPServer).GetSnapShot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gbpserver.GBP/GetSnapShot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GBPServer).GetSnapShot(ctx, req.(*VTEP))
	}
	return interceptor(ctx, in, info, handler)
}

var _GBP_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gbpserver.GBP",
	HandlerType: (*GBPServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListVTEPs",
			Handler:    _GBP_ListVTEPs_Handler,
		},
		{
			MethodName: "GetSnapShot",
			Handler:    _GBP_GetSnapShot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListObjects",
			Handler:       _GBP_ListObjects_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "gbp.proto",
}

func init() { proto.RegisterFile("gbp.proto", fileDescriptor_gbp_618b6ac99253a190) }

var fileDescriptor_gbp_618b6ac99253a190 = []byte{
	// 567 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0xdf, 0x8f, 0xd2, 0x40,
	0x10, 0xc7, 0xe9, 0x15, 0x5a, 0x3a, 0xdc, 0x8f, 0x66, 0x3c, 0xb5, 0x21, 0xd1, 0xe0, 0x1a, 0x23,
	0x2f, 0x12, 0xc3, 0x45, 0xef, 0xc1, 0xc4, 0x78, 0x40, 0x83, 0x1a, 0x0c, 0x64, 0x39, 0x78, 0x25,
	0x05, 0xf6, 0xee, 0x6a, 0xa0, 0x6d, 0xb6, 0x0b, 0xc9, 0xfd, 0x0d, 0xfe, 0x41, 0x3e, 0xfa, 0x67,
	0xf9, 0x6a, 0x76, 0xb7, 0xed, 0x35, 0x24, 0xde, 0xdb, 0xcc, 0x7c, 0x3f, 0xbb, 0x3b, 0x5f, 0x66,
	0x28, 0x38, 0xb7, 0xcb, 0xa4, 0x93, 0xf0, 0x58, 0xc4, 0x28, 0xc3, 0x94, 0xf1, 0x3d, 0xe3, 0xe4,
	0x8f, 0x01, 0xc7, 0xc3, 0xde, 0x64, 0x9c, 0x30, 0x1e, 0x88, 0x30, 0x8e, 0xf0, 0x23, 0x58, 0x71,
	0xb2, 0x8a, 0xd7, 0xcc, 0x33, 0x5a, 0x46, 0xfb, 0xb4, 0xfb, 0xb2, 0x53, 0xc0, 0x9d, 0x32, 0xd8,
	0x19, 0x27, 0xfd, 0x78, 0xcd, 0x68, 0x46, 0xe3, 0x07, 0x68, 0xc4, 0xcb, 0x9f, 0x6c, 0x25, 0x16,
	0x9b, 0x30, 0x15, 0xde, 0x51, 0xcb, 0x6c, 0x37, 0xba, 0xe7, 0x07, 0x87, 0x15, 0x40, 0x41, 0x83,
	0xa3, 0x30, 0x15, 0xe4, 0x0b, 0x58, 0xfa, 0x22, 0xb4, 0xc1, 0xbc, 0x1a, 0x0c, 0xdc, 0x0a, 0x36,
	0xc0, 0xa6, 0xfe, 0x64, 0x74, 0xd5, 0xf7, 0x5d, 0x03, 0x01, 0xac, 0x81, 0x3f, 0xf2, 0xaf, 0x7d,
	0xf7, 0x08, 0xcf, 0xc1, 0xd5, 0xf1, 0x82, 0xfa, 0xfd, 0x19, 0x9d, 0x7e, 0x9b, 0xfb, 0xae, 0x49,
	0x5e, 0x81, 0x3d, 0x67, 0x3c, 0x95, 0xbd, 0x3f, 0x03, 0x2b, 0xda, 0x6d, 0x97, 0x8c, 0xab, 0xde,
	0x6b, 0x34, 0xcb, 0xc8, 0x5f, 0x03, 0x9c, 0xe2, 0x79, 0xf4, 0xc0, 0x4e, 0x77, 0x2a, 0x54, 0x98,
	0x43, 0xf3, 0x14, 0x5d, 0x30, 0x77, 0x3c, 0xf4, 0x8e, 0x54, 0x55, 0x86, 0x78, 0x01, 0x90, 0xf0,
	0x38, 0x61, 0x5c, 0x84, 0x2c, 0xf5, 0x4c, 0x65, 0xea, 0x49, 0xc9, 0xd4, 0x44, 0x8b, 0xf7, 0xb4,
	0x84, 0x61, 0x13, 0xea, 0xab, 0xbb, 0x70, 0xb3, 0xe6, 0x2c, 0xf2, 0xaa, 0x2d, 0xb3, 0xed, 0xd0,
	0x22, 0xc7, 0x37, 0x70, 0x9a, 0x04, 0x9c, 0x45, 0x62, 0x91, 0xf7, 0x50, 0x53, 0xaf, 0x9d, 0xe8,
	0xea, 0x34, 0xeb, 0xe4, 0x05, 0x40, 0x86, 0xc9, 0x86, 0x2c, 0x85, 0x38, 0xba, 0x32, 0xe3, 0x21,
	0xbe, 0x85, 0xb3, 0x4c, 0xe6, 0x6c, 0xa3, 0xc6, 0xe1, 0xd9, 0x8a, 0xc9, 0x2e, 0xa7, 0x59, 0x95,
	0xfc, 0x32, 0xa0, 0x9e, 0xf7, 0x88, 0x08, 0xd5, 0x28, 0xd8, 0xb2, 0xcc, 0xb5, 0x8a, 0xd1, 0x03,
	0x2b, 0x15, 0x7c, 0x1e, 0x6c, 0xb4, 0xeb, 0xaf, 0x15, 0x9a, 0xe5, 0x52, 0x09, 0x23, 0x21, 0x15,
	0x53, 0xfe, 0x98, 0x52, 0xd1, 0x39, 0x76, 0xc0, 0xe2, 0xec, 0x46, 0x2a, 0xd5, 0x96, 0x71, 0x30,
	0x65, 0xca, 0x6e, 0x18, 0x67, 0xd1, 0x8a, 0x49, 0x5e, 0x53, 0x3d, 0x1b, 0x6a, 0xfb, 0x60, 0xb3,
	0x63, 0xe4, 0x3b, 0x38, 0x85, 0xfe, 0xc8, 0x18, 0x5e, 0xc3, 0x09, 0xcf, 0xb1, 0xc5, 0xc3, 0x40,
	0x8e, 0x8b, 0xe2, 0x8c, 0x87, 0xa4, 0x09, 0xd5, 0xf9, 0xb5, 0x3f, 0x91, 0xa6, 0xf6, 0x82, 0x25,
	0xb9, 0x29, 0x19, 0x93, 0x16, 0xd4, 0xa5, 0x26, 0x17, 0x0c, 0xcf, 0xa1, 0x26, 0x6b, 0xa9, 0x67,
	0xa8, 0x49, 0xe8, 0x84, 0x7c, 0x02, 0x18, 0x17, 0x4b, 0x88, 0xef, 0xc0, 0xde, 0xc6, 0x7a, 0x6f,
	0x8d, 0x47, 0xf6, 0xd6, 0xda, 0xc6, 0x6a, 0x67, 0x01, 0xea, 0xfe, 0x36, 0x11, 0xf7, 0x3f, 0xd2,
	0xdb, 0xee, 0x6f, 0x03, 0xcc, 0x61, 0x6f, 0x82, 0x9f, 0xa1, 0x21, 0x35, 0x4d, 0xa6, 0x88, 0xa5,
	0x0b, 0xb2, 0xed, 0x6c, 0x3e, 0xff, 0xcf, 0x3f, 0x89, 0x54, 0xde, 0x1b, 0x78, 0x09, 0x8e, 0x3c,
	0x2f, 0xdb, 0x4e, 0xb1, 0xbc, 0x61, 0xf9, 0x4b, 0xcd, 0x72, 0x31, 0x77, 0x47, 0x2a, 0x78, 0x09,
	0x8d, 0x21, 0x13, 0xd3, 0x28, 0x48, 0xa6, 0x77, 0xb1, 0xc0, 0xb3, 0x03, 0xaa, 0xf9, 0xb4, 0x54,
	0x78, 0xb0, 0x4c, 0x2a, 0x4b, 0x4b, 0x7d, 0x0b, 0x2e, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0xa6,
	0x7a, 0x3d, 0xb5, 0x18, 0x04, 0x00, 0x00,
}
